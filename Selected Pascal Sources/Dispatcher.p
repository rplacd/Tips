{ Dispatcher.p -- dispatcher for windows and for modeless dialogs }{ Created 12/21/23 2:51 AM by AppMaker }UNIT Dispatcher;INTERFACE	USES		Welcome, 		Globals;{----------}	PROCEDURE DoIdle;	PROCEDURE OpenWindows (fName: Str255; vRefNum: integer; fRefNum: integer);	PROCEDURE CloseCurWindow;	PROCEDURE DoControl (whichControl: ControlHandle; whichPart: integer; where: Point);	PROCEDURE MouseInContent (where: Point; modifiers: integer);	PROCEDURE TypeInWindow (ch: char);	PROCEDURE UpdateContent;	PROCEDURE ActivateContent (activate: boolean);	PROCEDURE ResizeContent;	PROCEDURE ScrollWindow (newValue: integer; oldValue: integer);	PROCEDURE InitModelessDialogs;	PROCEDURE CloseModelessDialog (whichDialog: DialogPtr);	FUNCTION FilterModeless (whichDialog: DialogPtr; VAR event: EventRecord; VAR itemHit: integer): boolean;	PROCEDURE DoModelessItem (whichDialog: DialogPtr; itemNr: integer);{----------}IMPLEMENTATION{----------}	PROCEDURE DoIdle;	BEGIN	END; {DoIdle}{----------}	PROCEDURE OpenWindows (fName: Str255; vRefNum: integer; fRefNum: integer);	BEGIN		OpenWelcome(fName, vRefNum, fRefNum);	END; {OpenWindows}{----------}	PROCEDURE CloseCurWindow;	BEGIN		CASE cur^.windowKind OF			WWelcome: 				CloseWelcome;		END; {case}	END; {CloseCurWindow}{----------}	PROCEDURE DoControl (whichControl: ControlHandle; whichPart: integer; where: Point);	BEGIN		CASE cur^.windowKind OF			WWelcome: 				ControlWelcome(whichControl, whichPart, where);		END; {case}	END; {DoControl}{----------}	PROCEDURE MouseInContent (where: Point; modifiers: integer);	BEGIN		CASE cur^.windowKind OF			WWelcome: 				MouseInWelcome(where, modifiers);		END; {case}	END; {MouseInContent}{----------}	PROCEDURE TypeInWindow (ch: char);	BEGIN		CASE cur^.windowKind OF			WWelcome: 				TypeInWelcome(ch);		END; {case}	END; {TypeInWindow}{----------}	PROCEDURE UpdateContent;	BEGIN		CASE cur^.windowKind OF			WWelcome: 				UpdateWelcome;		END; {case}	END; {UpdateContent}{----------}	PROCEDURE ActivateContent (activate: boolean);	BEGIN		CASE cur^.windowKind OF			WWelcome: 				ActivateWelcome(activate);		END; {case}	END; {ActivateContent}{----------}	PROCEDURE ResizeContent;	BEGIN		CASE cur^.windowKind OF			WWelcome: 				ResizeWelcome;		END; {case}	END; {ResizeContent}{----------}	PROCEDURE ScrollWindow (newValue: integer; oldValue: integer);	BEGIN		CASE cur^.windowKind OF			WWelcome: 				ScrollWelcome(newValue, oldValue);		END; {case}	END; {ScrollWindow}{----------}	PROCEDURE InitModelessDialogs;	BEGIN	END; {InitModelessDialogs}{----------}	PROCEDURE CloseModelessDialog (whichDialog: DialogPtr);	BEGIN	END; {CloseModelessDialog}{----------}	FUNCTION FilterModeless (whichDialog: DialogPtr; VAR event: EventRecord; VAR itemHit: integer): boolean;	BEGIN	END; {FilterModeless}{----------}	PROCEDURE DoModelessItem (whichDialog: DialogPtr; itemNr: integer);	BEGIN	END; {DoModelessItem}END. {Dispatcher}