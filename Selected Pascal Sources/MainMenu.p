{ MainMenu.p }{ Created 12/21/23 2:51 AM by AppMaker }UNIT MainMenu;INTERFACE	USES		FileM, 		Globals, ResourceDefs, Miscellany;{----------}	PROCEDURE InitTitles;	PROCEDURE LoadMenus;	PROCEDURE DoMenu (menuChoice: longint);	PROCEDURE UpdateMenus;{----------}IMPLEMENTATION{----------}	PROCEDURE InitTitles;	BEGIN		InitFileM;	END; {InitTitles}{----------}	PROCEDURE LoadMenus;	BEGIN		AppleMenu := GetMenu(AppleID);		FailNilResource(Handle(AppleMenu));		AddResMenu(AppleMenu, 'DRVR');		FileMenu := GetMenu(FileID);		InsertMenu(AppleMenu, 0);		InsertMenu(FileMenu, 0);		DrawMenuBar;	END; {LoadMenus}{----------}	PROCEDURE DoAboutTips;		VAR			itemNr: integer;	BEGIN		itemNr := Alert(AboutID, NIL);	END; {DoAboutTips}{----------}	PROCEDURE DoApple (itemNr: integer);		VAR			name: Str255;			refNum: integer;	BEGIN		CASE itemNr OF			AppleAboutTips: 				DoAboutTips;			OTHERWISE				BEGIN					GetItem(AppleMenu, itemNr, name);					refNum := OpenDeskAcc(name);				END;		END; {case}	END; {DoApple}{----------}	PROCEDURE DoMenu (menuChoice: longint);		VAR			menuID: integer;			itemNr: integer;	BEGIN		menuID := HiWord(menuChoice);		itemNr := LoWord(menuChoice);		CASE menuID OF			0: 				;				{Do nothing}			AppleID: 				DoApple(itemNr);			FileID: 				DoFile(itemNr);		END; {case}		HiliteMenu(0);	END; {DoMenu}{----------}	PROCEDURE UpdateMenus;		VAR			frontPeek: WindowPeek;			isFront: boolean;	{is there a front window?}			isCur: boolean;	{is there a current window?}			isDirty: boolean;	{is it dirty?}			hasFile: boolean;	{does it have a file?}			isSelected: boolean;	{is anything selected?}			isDesk: boolean;	{is the front window a desk acc?}			isText: boolean;	{is there a current text field?}			isScrap: boolean;	{is there any scrap?}			menu: MenuHandle;			menuBarChanged: boolean;	{----------}		PROCEDURE Enable (itemNr: integer; enabled: boolean);		BEGIN			IF enabled THEN				BEGIN					EnableItem(menu, itemNr);				END			ELSE				BEGIN					DisableItem(menu, itemNr);				END;		END; {Enable}	{----------}		PROCEDURE EnableTitle (menu: MenuHandle; enabled: boolean);		BEGIN			IF enabled <> odd(menu^^.enableFlags) THEN				BEGIN					menuBarChanged := true;				END;			IF enabled THEN				BEGIN					EnableItem(menu, 0);				END			ELSE				BEGIN					DisableItem(menu, 0);				END;		END; {EnableTitle}	BEGIN {UpdateMenus}		menuBarChanged := false;		isFront := (FrontWindow <> NIL);		isCur := (curWindow <> NIL);		isDirty := false;		hasFile := false;		isSelected := false;		IF isCur THEN			BEGIN				isDirty := cur^.dirty;				hasFile := (cur^.fileNum <> 0);			END;		isDesk := false;		IF isFront THEN			BEGIN				frontPeek := WindowPeek(FrontWindow);				isDesk := (frontPeek^.windowKind < 0);			END;		isText := false;		IF isCur THEN			BEGIN				isText := (cur^.text <> NIL);			END;		isScrap := false;		IF isText THEN			BEGIN				isSelected := (cur^.text^^.selStart <> cur^.text^^.selEnd);				isScrap := (TEGetScrapLen > 0);			END;		menu := FileMenu;		IF menuBarChanged THEN			BEGIN				DrawMenuBar;			END;	END; {UpdateMenus}END. {MainMenu}