UNIT TipResources;INTERFACE{ The application's storage of tip contents, and their }{ state, is in the form of resources of type 'tips', }{ with the over- the-wire structure given by the TipResource packed }{ record below. }	TYPE{ Tip records contain their tip, and a 'lastRun' }{ variable containing 'run IDs' -- random numbers }{ generated each time we run with the application -- }{ which we use to avoid displaying tips that we've }{ shown doing *this* application run. }		TipResource = PACKED RECORD				contents: Str255;				lastRun: Integer;			END;		TipResourcePtr = ^TipResource;		TipResourceHnd = ^TipResourcePtr;	CONST		NumTips = 8;	VAR		defaultTips: ARRAY[1..NumTips] OF TipResource;	PROCEDURE DoReinitializeTips;IMPLEMENTATION{ NB: Assume that DoReinitializeTips deallocates }{ all existing tips. (It currently does not do so.) }	PROCEDURE DoReinitializeTips;		VAR			i: Integer;			scratchTip: TipResourceHnd;	BEGIN{ These are the default tips; }		WITH defaultTips[1] DO			BEGIN				contents := 'The application switcher menu on the top-right corner allows you hide all windows belonging to all other apps, or all windows belonging to the current app.';				lastRun := 0;			END;		WITH defaultTips[2] DO			BEGIN				contents := 'For an alternative to the default file browser that doesn''t drive you crazy with windows popping up everywhere, look no further than Greg''s Browser. It has NeXTSTEP style columns!';				lastRun := 0;			END;		WITH defaultTips[3] DO			BEGIN				contents := 'File sharing between two Macs is as easy as connecting them directly to each other with a 9-pin serial cable, and using the Chooser';				lastRun := 0;			END;		WITH defaultTips[4] DO			BEGIN				contents := 'If you''re installing a multi-disk installer on an emulator, mount all of the disks in advance - the installer will blitz through the whole application without pausing to find a disk.';				lastRun := 0;			END;		WITH defaultTips[5] DO			BEGIN				contents := 'Want to know all of the symbols available through the opt, opt-shift, and opt-control keys? Use Key Caps: it''ll detect which modifier keys you '' re currently holding down , and update the keys it displays automatically.';				lastRun := 0;			END;		WITH defaultTips[6] DO			BEGIN				contents := 'The fastest way to get a compact Mac - other than an SE/30 - up and running is to use Floppy Emu''s HD20 mode : a hard drive over floppy port protocol. Go straight from a Mini vMac disk image straight to the real thing!';				lastRun := 0;			END;		WITH defaultTips[7] DO			BEGIN				contents := 'Fixing up a compact Mac? Don''t worry putting the RF shield back in - no one will notice.';				lastRun := 0;			END;		WITH defaultTips[8] DO			BEGIN				contents := 'When naming folders, it''s Macintosh convention to write "Ä" - produced by opt - f - in place of "folder".';				lastRun := 0;			END;{ Remove all existing tip resources; }		FOR i := CountResources('tips') DOWNTO 1 DO			BEGIN				RmveResource(GetIndResource('tips', i));			END;{ Write out default tips. }		FOR i := 1 TO NumTips DO			BEGIN				scratchTip := TipResourceHnd(NewHandle(SIZEOF(TipResource)));				scratchTip^^ := defaultTips[i];				AddResource(Handle(scratchTip), 'tips', 127 + i, '');				WriteResource(Handle(scratchTip));			END;	END;END.